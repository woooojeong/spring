<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/images/**"
		location="/resources/images" />
	<resources mapping="/resources/css/**"
		location="/resources/css" />
	<resources mapping="/resources/js/**"
		location="/resources/js" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- multipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>

	<!-- serive 객체 생성 -->
	<beans:bean id="memberService"
		class="com.team.service.MemberServiceImpl">
	</beans:bean>
	<beans:bean id="boardStoryService"
		class="com.team.service.BoardStoryServiceImpl"></beans:bean>
		
	<beans:bean id="noticeService" class="com.team.service.NoticeServiceImpl"></beans:bean>
	<beans:bean id="fileService" class="com.team.service.FileServiceImpl"></beans:bean>
	<beans:bean id="eatdealService" class="com.team.service.EatdealServiceImpl"></beans:bean>	
	<beans:bean id="pageService" class="com.team.service.PageServiceImpl"></beans:bean>
	<beans:bean id="restaurantService" class="com.team.service.RestaurantServiceImpl"></beans:bean>
	<beans:bean id="listService" class="com.team.service.ListServiceImpl"></beans:bean>
	<beans:bean id="reviewService" class="com.team.service.ReviewServiceImpl"></beans:bean>

	<!-- dao 객체 생성 -->
	<beans:bean id="boardStoryDao"
		class="com.mangoplate.dao.MangoBoardStoryDAO"></beans:bean>
	<beans:bean id="memberDao"
		class="com.mangoplate.dao.MangoMemberDAO"></beans:bean>
	<beans:bean id="restaurantDao"
		class="com.mangoplate.dao.MangoRestDAO"></beans:bean>
	<beans:bean id="listDao"
		class="com.mangoplate.dao.MangoListDAO"></beans:bean>
	<beans:bean id="reviewDao"
		class="com.mangoplate.dao.MangoReviewDAO"></beans:bean>	
		

	<!-- Interceptor 객체 생성 -->
	<beans:bean id="authInterceptor" class="com.team.interceptor.AuthInterceptor"></beans:bean>
	<beans:bean id="mypageauthInterceptor" class="com.team.interceptor.MypageAuthInterceptor"></beans:bean>

	<!-- 로그인을 하지 않은 상태에서 /admin.do 페이지를 요청하면 authInterceptor 객체에서 처리하도록 역할 부여 -->
	<interceptors> 
		<interceptor> 
			<mapping path="/admin*"/> 
			<beans:ref bean="authInterceptor"/> 
		</interceptor> 
		<interceptor> 
			<mapping path="/mypage*"/> 
			<beans:ref bean="mypageauthInterceptor"/> 
		</interceptor> 
	</interceptors>

	<context:component-scan
		base-package="com.team.mangoplate" />
	<context:component-scan
		base-package="com.team.controller" />



</beans:beans>
